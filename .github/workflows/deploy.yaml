name: Build and Deploy

on:
  push:
    branches: ["**"]

jobs:
  build-and-push:
    name: Build Docker Image and Push to GAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Configure Docker for GAR
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image to GAR
        run: |
          docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_NAME }}/${{ secrets.REPOSITORY_NAME }}:${{ github.sha }} ./applications/backend
          docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_NAME }}/${{ secrets.REPOSITORY_NAME }}:${{ github.sha }}

  deploy-terraform:
    name: Deploy with Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.1

      - name: Terraform Init
        run: terraform init
        env:
          GCP_PROJECT: ${{ secrets.PROJECT_ID }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_vpc_name: ${{ secrets.VPC_NAME }}
          TF_VAR_subnet_ip_range: ${{ secrets.SUBNET_IP_RANGE }}
          TF_VAR_subnet_name: ${{ secrets.SUBNET_NAME }}
          TF_VAR_cluster_name: ${{ secrets.CLUSTER_NAME }}
          TF_VAR_service_account_id: ${{ secrets.SERVICE_ACCOUNT_ID }}
          TF_VAR_repository_description: ${{ secrets.REPOSITORY_DESCRIPTION }}
          TF_VAR_repository_name: ${{ secrets.REPOSITORY_NAME }}
          TF_VAR_ir_image_tag: ${{ github.sha }}
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_vpc_name: ${{ secrets.VPC_NAME }}
          TF_VAR_subnet_ip_range: ${{ secrets.SUBNET_IP_RANGE }}
          TF_VAR_subnet_name: ${{ secrets.SUBNET_NAME }}
          TF_VAR_cluster_name: ${{ secrets.CLUSTER_NAME }}
          TF_VAR_service_account_id: ${{ secrets.SERVICE_ACCOUNT_ID }}
          TF_VAR_repository_description: ${{ secrets.REPOSITORY_DESCRIPTION }}
          TF_VAR_repository_name: ${{ secrets.REPOSITORY_NAME }}
          TF_VAR_ir_image_tag: ${{ github.sha }}
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
